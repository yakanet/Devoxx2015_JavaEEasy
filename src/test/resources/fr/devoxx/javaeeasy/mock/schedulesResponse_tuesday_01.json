
{"slots":[{"roomId":"a_hall","notAllocated":false,"fromTimeMillis":1415689200000,"break":{"id":"reg","nameEN":"Registration, Welcome and Breakfast","nameFR":"Accueil","room":{"id":"a_hall","name":"Exhibition floor","capacity":1500,"recorded":false,"setup":"special"}},"roomSetup":"special","talk":null,"fromTime":"08:00","toTimeMillis":1415694600000,"toTime":"09:30","roomCapacity":1500,"roomName":"Exhibition floor","slotId":"reg_tuesday_11_8h0_8h30","day":"tuesday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1415694600000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"Mobile","summaryAsHtml":"<p>Apple surprised us during the keynote at this years edition of WWDC. &quot;What if we could have a language as powerful as Objective C, but without the C?&quot;, they asked. And then So they announced Swift, their brand new language to develop iOS and OS X applications. We soon discovered that Swift wasn&#x27;t simply the next object-oriented language. It is a modern language, supporting functional as wel as object-oriented style of programming, it&#x27;s type safe and easy to read. The community embraced this new language and has been experimenting with it as well as delivering production quality code.</p>\n<p>To make sure you don&#x27;t miss all of the fun, we&#x27;ve prepared an introduction to the language, focussing on the resemblance and differences between Swift and Java. You&#x27;ll learn about Swift&#x27;s syntax, its type system and its functional style of programming. At the end of the session you should be ready to start experimenting yourself, and maybe, who knows, write your first non-Java app.</p>\n","id":"GDL-6943","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/2283790a8266669977241523ae1e4f278319537b","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Mike Seghers"},"name":"Mike Seghers"}],"title":"Swift for Java Developers","lang":"en","summary":"Apple surprised us during the keynote at this years edition of WWDC. \"What if we could have a language as powerful as Objective C, but without the C?\", they asked. And then So they announced Swift, their brand new language to develop iOS and OS X applications. We soon discovered that Swift wasn't simply the next object-oriented language. It is a modern language, supporting functional as wel as object-oriented style of programming, it's type safe and easy to read. The community embraced this new language and has been experimenting with it as well as delivering production quality code.\r\n\r\nTo make sure you don't miss all of the fun, we've prepared an introduction to the language, focussing on the resemblance and differences between Swift and Java. You'll learn about Swift's syntax, its type system and its functional style of programming. At the end of the session you should be ready to start experimenting yourself, and maybe, who knows, write your first non-Java app."},"fromTime":"09:30","toTimeMillis":1415705400000,"toTime":"12:30","roomCapacity":364,"roomName":"Room 4","slotId":"uni_room4_tuesday_11_9h30_12h30","day":"tuesday"},{"roomId":"room5","notAllocated":false,"fromTimeMillis":1415694600000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"JVM Languages","summaryAsHtml":"<p>Reactive Programming in gaining a lot of attention recently, but what&#x27;s is it? It is a culmination of a lot of good ideas developed over the years, but brought together by the forces of recent developments, both in terms of software and hardware (multicores, mobile devices). Developing a fast application is easy, but developing applications that are responsive and at the same time gracefully handle failure, to be resilient is not. In this presentation we will quickly go over what reactive programming is and what a reactive application is, but then dive into code level details of how to actually create them.</p>\n","id":"SUC-8683","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/49cba39de93b8bc6a79d7c768fd035c740c5483a","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Venkat Subramaniam"},"name":"Venkat Subramaniam"}],"title":"Reactive Programming: creating highly responsive applications","lang":"en","summary":"Reactive Programming in gaining a lot of attention recently, but what's is it? It is a culmination of a lot of good ideas developed over the years, but brought together by the forces of recent developments, both in terms of software and hardware (multicores, mobile devices). Developing a fast application is easy, but developing applications that are responsive and at the same time gracefully handle failure, to be resilient is not. In this presentation we will quickly go over what reactive programming is and what a reactive application is, but then dive into code level details of how to actually create them."},"fromTime":"09:30","toTimeMillis":1415705400000,"toTime":"12:30","roomCapacity":684,"roomName":"Room 5","slotId":"uni_room5_tuesday_11_9h30_12h30","day":"tuesday"},{"roomId":"room8","notAllocated":false,"fromTimeMillis":1415694600000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"Server Side Java","summaryAsHtml":"<p>Java EE 7 has been released more than a year ago now and work on its successor is in progress for a while now. A number of JSR&#x27;s have been filed. Some parts are almost done, while others are still in a conceptual phase. In this session, you will learn what you can expect from Java EE 8. Some of the Java EE 8 spec leads will explain their JSR, and show you the current state, including code samples and tutorials.</p>\n","id":"KGT-6552","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/29db73c44aa90f13dbf8129804f1037b44d9f3fe","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Johan Vos"},"name":"Johan Vos"}],"title":"Java EE 8: let's get concrete","lang":"en","summary":"Java EE 7 has been released more than a year ago now and work on its successor is in progress for a while now. A number of JSR's have been filed. Some parts are almost done, while others are still in a conceptual phase. In this session, you will learn what you can expect from Java EE 8. Some of the Java EE 8 spec leads will explain their JSR, and show you the current state, including code samples and tutorials."},"fromTime":"09:30","toTimeMillis":1415705400000,"toTime":"12:30","roomCapacity":745,"roomName":"Room 8","slotId":"uni_room8_tuesday_11_9h30_12h30","day":"tuesday"},{"roomId":"room9","notAllocated":false,"fromTimeMillis":1415694600000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"Methodology & DevOps","summaryAsHtml":"<p>Docker is the latest hotness in the deployment automation space, and opens a whole new world of opportunities in how we bundle, deploy and manage our running apps. Learn what Docker is all about and how to get started working with it.</p>\n<p>During this university, you will learn how to get Docker installed and get started using it to build and run your own containers. We&#x27;ll take Docker apart and see how it works under the hood. Then we&#x27;ll zoom out and experiment with Fleet and Mesos – interesting technologies built upon Docker for deploying containers to clusters of machines. All the while, we&#x27;ll talk about how this new technology is poised to radically change how we think about deployment.</p>\n","id":"DXH-1958","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/71e1f6c1d6f5b6eecca725da801df98ccbacdd30","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Carl Quinn"},"name":"Carl Quinn"}],"title":"Docker for Fun and Profit","lang":"en","summary":"Docker is the latest hotness in the deployment automation space, and opens a whole new world of opportunities in how we bundle, deploy and manage our running apps. Learn what Docker is all about and how to get started working with it.\r\n\r\nDuring this university, you will learn how to get Docker installed and get started using it to build and run your own containers. We'll take Docker apart and see how it works under the hood. Then we'll zoom out and experiment with Fleet and Mesos – interesting technologies built upon Docker for deploying containers to clusters of machines. All the while, we'll talk about how this new technology is poised to radically change how we think about deployment."},"fromTime":"09:30","toTimeMillis":1415705400000,"toTime":"12:30","roomCapacity":425,"roomName":"Room 9","slotId":"uni_room9_tuesday_11_9h30_12h30","day":"tuesday"},{"roomId":"bof1","notAllocated":false,"fromTimeMillis":1415694600000,"break":null,"roomSetup":"classroom","talk":{"talkType":"Hand's on Labs","track":"Server Side Java","summaryAsHtml":"<p>In this hands-on lab, attendees will create a Java EE application that uses most of the Java EE specifications (JPA, Bean Validation, CDI, JSF, JAX-RS...) and test it (JUnit and Arquillian). From a white sheet, JBoss Forge will help you to quick start it and add extra features to, finally, end-up with a fully functional application.</p>\n","id":"WQJ-3221","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/dc61d5c028dceb9ce4fd55623c6f725f3666ab46","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Antonio Goncalves"},"name":"Antonio Goncalves"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/1b326daa89380a74baa4a530846e5a74aca752ef","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Ivan St. Ivanov"},"name":"Ivan St. Ivanov"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/3656bcdb02cb60bb022fd7366224d4df57a4449a","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Koen Aers"},"name":"Koen Aers"}],"title":"Three hours to build a Java EE application","lang":"en","summary":"In this hands-on lab, attendees will create a Java EE application that uses most of the Java EE specifications (JPA, Bean Validation, CDI, JSF, JAX-RS...) and test it (JUnit and Arquillian). From a white sheet, JBoss Forge will help you to quick start it and add extra features to, finally, end-up with a fully functional application."},"fromTime":"09:30","toTimeMillis":1415705400000,"toTime":"12:30","roomCapacity":70,"roomName":"BOF 1","slotId":"lab_bof1_tuesday_11_9h30_12h30","day":"tuesday"},{"roomId":"bof2","notAllocated":false,"fromTimeMillis":1415694600000,"break":null,"roomSetup":"classroom","talk":{"talkType":"Hand's on Labs","track":"Java SE","summaryAsHtml":"<p>Java SE 8 has introduced the biggest changes to the Java platform since its launch nearly twenty years ago.  The two main features are Lambda expressions and the Streams API.  When combined these features provide a more functional style of programming that will be unfamiliar to many experienced Java developers and requires a different way of thinking when designing solutions to problems.</p>\n<p>This lab provides a range of exercises intended to get attendees thinking differently about the approach they take to common bulk operations on collections.  The exercises will start with simple introductory type problems and work up to complex, more real-world scenarios.  A brief introduction will be given at the start of the lab to set the scene in terms of the features used and will conclude with an explanation of all the solutions.  We will also include some aspects of how different solutions can provide differing levels of performance.</p>\n","id":"LAG-8029","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/c2d8b8e1e33706d84d040f43d770cd72da5c6030","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Simon Ritter"},"name":"Simon Ritter"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/a58ccd51e350fccb540ea5548cef107785624501","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Stuart Marks"},"name":"Stuart Marks"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/a4758902656c6ddf1750da9df0538fb1a97b2a19","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Angela Caicedo"},"name":"Angela Caicedo"}],"title":"Go With The Flow: Streams and Lambdas Power Lab","lang":"en","summary":"Java SE 8 has introduced the biggest changes to the Java platform since its launch nearly twenty years ago.  The two main features are Lambda expressions and the Streams API.  When combined these features provide a more functional style of programming that will be unfamiliar to many experienced Java developers and requires a different way of thinking when designing solutions to problems.\r\n\r\nThis lab provides a range of exercises intended to get attendees thinking differently about the approach they take to common bulk operations on collections.  The exercises will start with simple introductory type problems and work up to complex, more real-world scenarios.  A brief introduction will be given at the start of the lab to set the scene in terms of the features used and will conclude with an explanation of all the solutions.  We will also include some aspects of how different solutions can provide differing levels of performance."},"fromTime":"09:30","toTimeMillis":1415705400000,"toTime":"12:30","roomCapacity":70,"roomName":"BOF 2","slotId":"lab_bof2_tuesday_11_9h30_12h30","day":"tuesday"},{"roomId":"a_hall","notAllocated":false,"fromTimeMillis":1415705400000,"break":{"id":"lunch","nameEN":"Lunch","nameFR":"Pause déjeuner","room":{"id":"a_hall","name":"Exhibition floor","capacity":1500,"recorded":false,"setup":"special"}},"roomSetup":"special","talk":null,"fromTime":"12:30","toTimeMillis":1415709000000,"toTime":"13:30","roomCapacity":1500,"roomName":"Exhibition floor","slotId":"lunch_tuesday_11_12h30_12h30","day":"tuesday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1415709000000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"JVM Languages","summaryAsHtml":"<p>RxJava is an open source, polyglot implementation of Reactive Extensions for the JVM. It is a library which allows the composition of asynchronous and event-based programs by using observable sequences. Using RxJava, developers represent asynchronous data streams with Observables, manipulate these streams by means of functional operators, and use Schedulers to parametrize their concurrency.\nDuring this session we will cover both the internal architecture of Rx - also focusing on the theoretical foundations and concepts that underlie and drive its implementation - and its external architecture, exploring the main advantages of integrating RxJava into non-blocking asynchronous applications. This talk will mostly use Scala but, just like Rx itself, the ideas and lessons are polyglot.</p>\n","id":"WDA-0810","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/4275acb430a93ecd5d2fe8285c4b0c1807f06f17","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Georgi Khomeriki"},"name":"Georgi Khomeriki"}],"title":"Reactive thinking with Rx","lang":"en","summary":"RxJava is an open source, polyglot implementation of Reactive Extensions for the JVM. It is a library which allows the composition of asynchronous and event-based programs by using observable sequences. Using RxJava, developers represent asynchronous data streams with Observables, manipulate these streams by means of functional operators, and use Schedulers to parametrize their concurrency.\r\nDuring this session we will cover both the internal architecture of Rx - also focusing on the theoretical foundations and concepts that underlie and drive its implementation - and its external architecture, exploring the main advantages of integrating RxJava into non-blocking asynchronous applications. This talk will mostly use Scala but, just like Rx itself, the ideas and lessons are polyglot."},"fromTime":"13:30","toTimeMillis":1415719800000,"toTime":"16:30","roomCapacity":364,"roomName":"Room 4","slotId":"uni_room4_tuesday_11_13h30_16h30","day":"tuesday"},{"roomId":"room5","notAllocated":false,"fromTimeMillis":1415709000000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"Server Side Java","summaryAsHtml":"<p>In less than five years of existence, Contexts and Dependency Injection (CDI) has become one of the major specifications in Java EE. CDI 1.1 and 1.2 proved to be the best solutions to naturally extend Java EE 7. In this session, the co-spec lead of CDI covers advanced CDI topics such as metadata injection manipulation, portable extension development, and new context creation.\nIn this university we will explore advanced features in CDI on the theoretical and practical sides. We’ll show how to integrate legacy code, how to extend CDI to integrate an existing framework and how to use CDI to create a new powerful framework.</p>\n","id":"CSX-3476","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/f51267a236f548f70af38b361fed5b91a82da496","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Antoine Sabot-Durand"},"name":"Antoine Sabot-Durand"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/ac86d350227e6f0aa60bbb21493f534203bbecb8","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Antonin Stefanutti"},"name":"Antonin Stefanutti"}],"title":"Going farther with CDI 1.2","lang":"en","summary":"In less than five years of existence, Contexts and Dependency Injection (CDI) has become one of the major specifications in Java EE. CDI 1.1 and 1.2 proved to be the best solutions to naturally extend Java EE 7. In this session, the co-spec lead of CDI covers advanced CDI topics such as metadata injection manipulation, portable extension development, and new context creation.\r\nIn this university we will explore advanced features in CDI on the theoretical and practical sides. We’ll show how to integrate legacy code, how to extend CDI to integrate an existing framework and how to use CDI to create a new powerful framework."},"fromTime":"13:30","toTimeMillis":1415719800000,"toTime":"16:30","roomCapacity":684,"roomName":"Room 5","slotId":"uni_room5_tuesday_11_13h30_16h30","day":"tuesday"},{"roomId":"room8","notAllocated":false,"fromTimeMillis":1415709000000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"Java SE","summaryAsHtml":"<p>Java 8 has been released more than 6 months ago, and we can already see project moving to this new version. The biggest new thing of this release is of course the introduction of the lambda expressions. This introduction would have been useless of the Collection API wouldnt have been revisited to leverage the power of the lambda expressions. This has been done, and brought the new Stream API to us developpers. The Stream API, along with the Collectors, makes our good old Iterator pattern a little old now. This university aims to show the new patterns brought by the Stream API, on many examples, simple and complex. We will show new patterns, and talk about implementation, performances and parallelization.</p>\n","id":"TDW-2914","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/35a6797008ce8295fcc76c03dcf0a58a07ab3070","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"José Paumard"},"name":"José Paumard"}],"title":"Java 8 Streams & Collectors : patterns, performances, parallelization","lang":"en","summary":"Java 8 has been released more than 6 months ago, and we can already see project moving to this new version. The biggest new thing of this release is of course the introduction of the lambda expressions. This introduction would have been useless of the Collection API wouldnt have been revisited to leverage the power of the lambda expressions. This has been done, and brought the new Stream API to us developpers. The Stream API, along with the Collectors, makes our good old Iterator pattern a little old now. This university aims to show the new patterns brought by the Stream API, on many examples, simple and complex. We will show new patterns, and talk about implementation, performances and parallelization. \r\n"},"fromTime":"13:30","toTimeMillis":1415719800000,"toTime":"16:30","roomCapacity":745,"roomName":"Room 8","slotId":"uni_room8_tuesday_11_13h30_16h30","day":"tuesday"},{"roomId":"room9","notAllocated":false,"fromTimeMillis":1415709000000,"break":null,"roomSetup":"theatre","talk":{"talkType":"University","track":"Future<Devoxx>","summaryAsHtml":"<p>This tutorial is designed to help you use your Java programming skills to create hobby projects using the Raspberry Pi as an inexpensive (35 euros) interface to the physical world.  We will teach the concepts by demonstrating examples with working projects and source code.  Some of the topics we will cover include:</p>\n<ul>\n<li>Unboxing your Raspberry Pi and setting up Java</li>\n<li>Electrical circuit design for GPIO</li>\n<li>Using the Java 8 Device Access API</li>\n<li>Programming common I2C devices</li>\n<li>Device communication over HTTP, MQTT, and Web Sockets</li>\n<li>Creating visual and touch UIs</li>\n<li>3D Printing custom hardware</li>\n</ul>\n<p>Coming out of this session you will have the knowledge you need to start building your own embedded projects for your home or office, and can leverage your Java programming skills to connect it to the Internet of Things.  Start building the future now with Java 8 Embedded technology!</p>\n","id":"IWS-5192","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/d780d8be32264fc25bdd5c861d352016d54c79ed","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Stephen Chin"},"name":"Stephen Chin"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/d5654af4eabee673a0b8547db98b5843d440f3c5","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"James Weaver"},"name":"James Weaver"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/8cc9e7b93445cd6958b54ff06297ba6cfe9e1359","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Robert Savage"},"name":"Robert Savage"}],"title":"Raspberry Pi with Java 8","lang":"en","summary":"This tutorial is designed to help you use your Java programming skills to create hobby projects using the Raspberry Pi as an inexpensive (35 euros) interface to the physical world.  We will teach the concepts by demonstrating examples with working projects and source code.  Some of the topics we will cover include:\r\n\r\n* Unboxing your Raspberry Pi and setting up Java\r\n* Electrical circuit design for GPIO\r\n* Using the Java 8 Device Access API\r\n* Programming common I2C devices\r\n* Device communication over HTTP, MQTT, and Web Sockets\r\n* Creating visual and touch UIs\r\n* 3D Printing custom hardware\r\n\r\nComing out of this session you will have the knowledge you need to start building your own embedded projects for your home or office, and can leverage your Java programming skills to connect it to the Internet of Things.  Start building the future now with Java 8 Embedded technology!"},"fromTime":"13:30","toTimeMillis":1415719800000,"toTime":"16:30","roomCapacity":425,"roomName":"Room 9","slotId":"uni_room9_tuesday_11_13h30_16h30","day":"tuesday"},{"roomId":"bof1","notAllocated":false,"fromTimeMillis":1415709000000,"break":null,"roomSetup":"classroom","talk":{"talkType":"Hand's on Labs","track":"Java SE","summaryAsHtml":"<p>One of the hazards of multi-threaded code is that if we are not careful, we might cause a deadlock in our program.  The simplest of these is the &quot;deadly embrace&quot;, where locks are acquired by multiple threads in different orders.  The simple deadlocks can be detected automatically with the deadlock detection tool in the ThreadMXBean.  However, there is another class of deadlock that requires us to analyze the stack traces of all the threads.</p>\n<p>In this hands-on-lab, we will explain what causes deadlocks and how we can find them.  You will then be given a body of code to test for deadlocks using the techniques learned.</p>\n","id":"ZNA-9382","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/09d12f7ea469e18bddd0f761ec574a719e2c1f1d","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Heinz Kabutz"},"name":"Heinz Kabutz"}],"title":"Finding and Solving Java Deadlocks","lang":"en","summary":"One of the hazards of multi-threaded code is that if we are not careful, we might cause a deadlock in our program.  The simplest of these is the \"deadly embrace\", where locks are acquired by multiple threads in different orders.  The simple deadlocks can be detected automatically with the deadlock detection tool in the ThreadMXBean.  However, there is another class of deadlock that requires us to analyze the stack traces of all the threads.\r\n\r\nIn this hands-on-lab, we will explain what causes deadlocks and how we can find them.  You will then be given a body of code to test for deadlocks using the techniques learned."},"fromTime":"13:30","toTimeMillis":1415719800000,"toTime":"16:30","roomCapacity":70,"roomName":"BOF 1","slotId":"lab_bof1_tuesday_11_13h30_16h30","day":"tuesday"},{"roomId":"bof2","notAllocated":false,"fromTimeMillis":1415709000000,"break":null,"roomSetup":"classroom","talk":{"talkType":"Hand's on Labs","track":"Mobile","summaryAsHtml":"<p>Dependency Injection is a strategy for organizing and decoupling your classes. Automated dependency injection frameworks like Spring, Guice, and Dagger 1 infer their dependencies from signals in the classes. Dagger 1 introduced code-generated adapters to improve debugging clarity, move errors to compile-time and reduce costs of reflection. But they all have a &quot;god object&quot; - an Injector or Context or ObjectGraph which manages a graph of objects.</p>\n<p>Dagger 2 turns code-gen up to 11, and removes the &quot;framework&quot; from your code. It takes your classes, your interfaces, and generates all of the wiring around a very simple component abstraction. This approach lets Dagger 2 effectively be &quot;simply object-orientation&quot; but with an additional level of granularity. This removes the &quot;magic bag&quot; (injector) from your code, and lets you compose objects cleanly and simply.</p>\n<p>This hands-on session will have attendees build a simple Dagger 2, application using the @Component, @Module/@Provides, and @Inject signals, building from a simple small graph, to a graph with activity and user lifecycle and will highlight design patterns and recommended practices.</p>\n","id":"ZBA-2635","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/118044e9c188178c330b5abcb7f0e228d5d8558e","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Christian Gruber"},"name":"Christian Gruber"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/7f3aeb62e9a323960cb46f64eaf10fbc1d543567","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Gregory Kick"},"name":"Gregory Kick"}],"title":"Dagger 2 on Android: A tutorial in next-gen dependency injection","lang":"en","summary":"Dependency Injection is a strategy for organizing and decoupling your classes. Automated dependency injection frameworks like Spring, Guice, and Dagger 1 infer their dependencies from signals in the classes. Dagger 1 introduced code-generated adapters to improve debugging clarity, move errors to compile-time and reduce costs of reflection. But they all have a \"god object\" - an Injector or Context or ObjectGraph which manages a graph of objects.\r\n\r\nDagger 2 turns code-gen up to 11, and removes the \"framework\" from your code. It takes your classes, your interfaces, and generates all of the wiring around a very simple component abstraction. This approach lets Dagger 2 effectively be \"simply object-orientation\" but with an additional level of granularity. This removes the \"magic bag\" (injector) from your code, and lets you compose objects cleanly and simply.\r\n\r\nThis hands-on session will have attendees build a simple Dagger 2, application using the @Component, @Module/@Provides, and @Inject signals, building from a simple small graph, to a graph with activity and user lifecycle and will highlight design patterns and recommended practices."},"fromTime":"13:30","toTimeMillis":1415719800000,"toTime":"16:30","roomCapacity":70,"roomName":"BOF 2","slotId":"lab_bof2_tuesday_11_13h30_16h30","day":"tuesday"},{"roomId":"a_hall","notAllocated":false,"fromTimeMillis":1415719800000,"break":{"id":"coffee","nameEN":"Coffee Break","nameFR":"Pause café","room":{"id":"a_hall","name":"Exhibition floor","capacity":1500,"recorded":false,"setup":"special"}},"roomSetup":"special","talk":null,"fromTime":"16:30","toTimeMillis":1415720700000,"toTime":"16:45","roomCapacity":1500,"roomName":"Exhibition floor","slotId":"coffee_tuesday_11_16h30_15h45","day":"tuesday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1415720700000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Architecture & Security","summaryAsHtml":"<p>At cloudbees we have transitioned over 4 years from scrappy startup to an on-going business. Some early technology decisions were regretted, and some just became obsolete. In both cases, we had to deal with replacing entire systems without online users noticing (there are no real outage windows, usage spans all timezones). As two examples I will talk about shifting to a multi-tenant build environment, and moving from bespoke lxc containment to docker - once a de-facto standard emerged - in all cases ensuring a smooth multi month transition without users noticing.</p>\n","id":"TZQ-1385","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/69f9bfa38f20161972d922e9a1109e4e23971161","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Michael Neale"},"name":"Michael Neale"}],"title":"Changing the wheel of a moving car - replacing core technology while a startup grows","lang":"en","summary":"At cloudbees we have transitioned over 4 years from scrappy startup to an on-going business. Some early technology decisions were regretted, and some just became obsolete. In both cases, we had to deal with replacing entire systems without online users noticing (there are no real outage windows, usage spans all timezones). As two examples I will talk about shifting to a multi-tenant build environment, and moving from bespoke lxc containment to docker - once a de-facto standard emerged - in all cases ensuring a smooth multi month transition without users noticing. "},"fromTime":"16:45","toTimeMillis":1415722500000,"toTime":"17:15","roomCapacity":364,"roomName":"Room 4","slotId":"tia_room4_tuesday_11_16h45_17h15","day":"tuesday"},{"roomId":"room5","notAllocated":false,"fromTimeMillis":1415720700000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Cloud & BigData","summaryAsHtml":"<p>Performing ETL on big data can be slow, expensive and painful - but it doesn&#x27;t have to be! In this session, we&#x27;ll take an in-depth look at several real-world examples of computations that don&#x27;t fit well with the SQL language model and how to solve them with user-defined functions in <a href=\"https://developers.google.com/bigquery/\">Google BigQuery</a>.</p>\n<p>BigQuery is a fully-managed SQL analytical engine, also used internally in Google, <a href=\"http://www.youtube.com/watch?v=LSLU8Gxt-rc\">capable of analyzing terabytes of data per second</a>. BigQuery executes user-defined functions on the same server shards that handle data processing and analytics, allowing extremely efficient execution in terms of both latency and price.</p>\n","id":"GNO-7806","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/a8ac2c811d735f24d5de00ff4402ac22102776ce","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Thomas Park"},"name":"Thomas Park"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/55718f7a7b317aa6799f2107b85293c9236e0fc3","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Felipe Hoffa"},"name":"Felipe Hoffa"}],"title":"Hands-on with BigQuery JavaScript User-Defined Functions","lang":"en","summary":"Performing ETL on big data can be slow, expensive and painful - but it doesn't have to be! In this session, we'll take an in-depth look at several real-world examples of computations that don't fit well with the SQL language model and how to solve them with user-defined functions in [Google BigQuery](https://developers.google.com/bigquery/).\r\n\r\nBigQuery is a fully-managed SQL analytical engine, also used internally in Google, [capable of analyzing terabytes of data per second](http://www.youtube.com/watch?v=LSLU8Gxt-rc). BigQuery executes user-defined functions on the same server shards that handle data processing and analytics, allowing extremely efficient execution in terms of both latency and price."},"fromTime":"16:45","toTimeMillis":1415722500000,"toTime":"17:15","roomCapacity":684,"roomName":"Room 5","slotId":"tia_room5_tuesday_11_16h45_17h15","day":"tuesday"},{"roomId":"room8","notAllocated":false,"fromTimeMillis":1415720700000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Java SE","summaryAsHtml":"<p>A traditional Java profiler consists of two components. One collects profile data from the running application and the other is a visualization user interface to query the data. The profiler capabilities are limited by the data collected but also by the provided reports and functionality. This can be limiting when it comes to complex query of data.\nIn this session we will introduce mjprof. It is an open source textual visualization profiler. It is extremely powerful as it enables you to compose a sequence of simple steps  (monads) such as filters, transformations, group-by  which let you slice and dice the data to pinpoint the problem. Working with mjprof resembles working with UNIX pipes.\nWe will explain how to use this tool and  present use cases and success stories, using this profiler in the last months.\nmjprof is written in Java and can be found on github as part of the AdoptOpenJDK project.</p>\n","id":"VDL-3223","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/ce55341aadb44ac5339bba22acc1169fa81096bf","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Haim Yadid"},"name":"Haim Yadid"}],"title":"mjprof: Monadic approach for JVM profiling ","lang":"en","summary":"A traditional Java profiler consists of two components. One collects profile data from the running application and the other is a visualization user interface to query the data. The profiler capabilities are limited by the data collected but also by the provided reports and functionality. This can be limiting when it comes to complex query of data. \r\nIn this session we will introduce mjprof. It is an open source textual visualization profiler. It is extremely powerful as it enables you to compose a sequence of simple steps  (monads) such as filters, transformations, group-by  which let you slice and dice the data to pinpoint the problem. Working with mjprof resembles working with UNIX pipes. \r\nWe will explain how to use this tool and  present use cases and success stories, using this profiler in the last months.\r\nmjprof is written in Java and can be found on github as part of the AdoptOpenJDK project."},"fromTime":"16:45","toTimeMillis":1415722500000,"toTime":"17:15","roomCapacity":745,"roomName":"Room 8","slotId":"tia_room8_tuesday_11_16h45_17h15","day":"tuesday"},{"roomId":"room9","notAllocated":false,"fromTimeMillis":1415720700000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Methodology & DevOps","summaryAsHtml":"<p>When it comes to deploying software we all want the same thing. Deployments should be fast, predictable and reliable. Environments should be as similar as possible. Servers should be easy to set up, update and keep in sync. Yet they should also be disposable, reproducible and secure. Sounds hard and time consuming? That&#x27;s because it is.</p>\n<p>But does it have to be this way? What if you could focus that energy on building your app instead? What if instead of installing, configuring and patching existing machines, we could simply generate new ones? Fresh, as part of every build, and within seconds?</p>\n<p>Look no further. In this session you&#x27;ll see how you can turn your App in the smallest possible machine required to run it. This machine is hardened by design and transportable. It runs identically on your laptop and in the cloud. Say goodbye to environmental inconsistencies, snow flake servers and bloated machines. Welcome to Immutable Server generation. Welcome to Boxfuse.</p>\n","id":"OIT-7577","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/20082ca7a495761460b18069cb546da5be89e35f","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Axel Fontaine"},"name":"Axel Fontaine"}],"title":"Boxfuse: Immutable Server Generation","lang":"en","summary":"When it comes to deploying software we all want the same thing. Deployments should be fast, predictable and reliable. Environments should be as similar as possible. Servers should be easy to set up, update and keep in sync. Yet they should also be disposable, reproducible and secure. Sounds hard and time consuming? That's because it is.\r\n\r\nBut does it have to be this way? What if you could focus that energy on building your app instead? What if instead of installing, configuring and patching existing machines, we could simply generate new ones? Fresh, as part of every build, and within seconds?\r\n\r\nLook no further. In this session you'll see how you can turn your App in the smallest possible machine required to run it. This machine is hardened by design and transportable. It runs identically on your laptop and in the cloud. Say goodbye to environmental inconsistencies, snow flake servers and bloated machines. Welcome to Immutable Server generation. Welcome to Boxfuse."},"fromTime":"16:45","toTimeMillis":1415722500000,"toTime":"17:15","roomCapacity":425,"roomName":"Room 9","slotId":"tia_room9_tuesday_11_16h45_17h15","day":"tuesday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1415723100000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Cloud & BigData","summaryAsHtml":"<p>Algebird is an abstract algebra library for Scala, developed at Twitter and released under the ASL 2.0 license.</p>\n<p>It has support for algebraic structures such as semigroups, monoids, groups, rings and fields as well as the standard functional things like monads. More interestingly though are the probabilistic data structures and the accompanying monoids that come out of the box.\nBasically it&#x27;s a toolbox to speed up big data analytics processing.</p>\n<p>In this talk II&#x27;ll talk a bit about Algebird in general and how it integrates with other tools like Map Reduce, Spark, Storm to  building large scale analytics systems with Map Reduce systems or in a stream processing context.</p>\n","id":"COF-8618","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/1b36fe9b11f693cef5d167cd5b7c56f4c2b190f2","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Sam Bessalah"},"name":"Sam Bessalah"}],"title":"Algebird : algebra for efficient big data processing","lang":"en","summary":"Algebird is an abstract algebra library for Scala, developed at Twitter and released under the ASL 2.0 license.\r\n\r\n It has support for algebraic structures such as semigroups, monoids, groups, rings and fields as well as the standard functional things like monads. More interestingly though are the probabilistic data structures and the accompanying monoids that come out of the box. \r\nBasically it's a toolbox to speed up big data analytics processing.\r\n\r\nIn this talk II'll talk a bit about Algebird in general and how it integrates with other tools like Map Reduce, Spark, Storm to  building large scale analytics systems with Map Reduce systems or in a stream processing context."},"fromTime":"17:25","toTimeMillis":1415724900000,"toTime":"17:55","roomCapacity":364,"roomName":"Room 4","slotId":"tia_room4_tuesday_11_17h25_17h55","day":"tuesday"},{"roomId":"room5","notAllocated":false,"fromTimeMillis":1415723100000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Web & HTML5","summaryAsHtml":"<p>A great developer conference starts with a pleasant registration experience. This talk will provide a technical overview of the solution deployed at Devoxx and at Google I/O 2014.</p>\n<p>It involves a RESTful backend and a ChromeApp running on Chromebooks in kiosk mode and with an NFC library to support attendee badge scanning (and occasionally writing). We&#x27;ll discuss writing the application and the continuous desktop deployment made possible by our setup.</p>\n","id":"YOZ-1554","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/952c0e363ee67013f393c208dc344a89000576ea","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Alexis Moussine-Pouchkine"},"name":"Alexis Moussine-Pouchkine"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/ea9e496d7e3d51b13470755f6f10d24646314fdb","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"François Beaufort"},"name":"François Beaufort"}],"title":"From Devoxx to Google I/O and back - a tale of a hassle-free registration system with Chrome Apps","lang":"en","summary":"A great developer conference starts with a pleasant registration experience. This talk will provide a technical overview of the solution deployed at Devoxx and at Google I/O 2014.\r\n\r\nIt involves a RESTful backend and a ChromeApp running on Chromebooks in kiosk mode and with an NFC library to support attendee badge scanning (and occasionally writing). We'll discuss writing the application and the continuous desktop deployment made possible by our setup."},"fromTime":"17:25","toTimeMillis":1415724900000,"toTime":"17:55","roomCapacity":684,"roomName":"Room 5","slotId":"tia_room5_tuesday_11_17h25_17h55","day":"tuesday"},{"roomId":"room8","notAllocated":false,"fromTimeMillis":1415723100000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Java SE","summaryAsHtml":"<p>TDD is not dead. So you can&#x27;t use Groovy or Scala which means no Spock or Specs but good ol&#x27; Java JUnit tests don&#x27;t have to be ugly unreadable code regurgitations full of repeated lines and semi-english variable and method names! Tests deserve as much love as production code but thanks to AssertJ or if you&#x27;re using Java 8 Lambda-Behave. With code examples using these two libraries we&#x27;ll see how combining these with 10 simple rules will make your tests cleaner, more human-readable, and perhaps most importantly: maintainable.</p>\n","id":"MYF-9730","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/1ef39ad5d06fb4790ff6121c10b99f1b44b46178","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"James McGivern"},"name":"James McGivern"}],"title":"Tests That Talk","lang":"en","summary":"TDD is not dead. So you can't use Groovy or Scala which means no Spock or Specs but good ol' Java JUnit tests don't have to be ugly unreadable code regurgitations full of repeated lines and semi-english variable and method names! Tests deserve as much love as production code but thanks to AssertJ or if you're using Java 8 Lambda-Behave. With code examples using these two libraries we'll see how combining these with 10 simple rules will make your tests cleaner, more human-readable, and perhaps most importantly: maintainable."},"fromTime":"17:25","toTimeMillis":1415724900000,"toTime":"17:55","roomCapacity":745,"roomName":"Room 8","slotId":"tia_room8_tuesday_11_17h25_17h55","day":"tuesday"},{"roomId":"room9","notAllocated":false,"fromTimeMillis":1415723100000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Cloud & BigData","summaryAsHtml":"<p>Today in the Big Data world, Hadoop and MapReduce are highly dominant for large scale data processing. However, the MapReduce model shows its limits for various types of treatment, especially for highly iterative algorithms like in Machine Learning.\nSpark is an in-memory data processing framework that, unlike Hadoop provides interactive and real-time analysis on large datasets. Furthermore Spark has a more flexible programming model and gives better performances than Hadoop.</p>\n<p>This talk aims at introducing Spark by showing off through a Machine Learning example how it differentiates itself from Hadoop, in regards to its API and performances. And as a closing note we will quickly explore the growing Spark ecosystem with projects like Spark streaming, Shark or SparkSQL.</p>\n","id":"FUS-0039","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/1323ac1baa9977e968a897405c334b5bb2c743ee","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Ludwine Probst"},"name":"Ludwine Probst"}],"title":"Lightning fast Machine Learning with Spark","lang":"en","summary":"Today in the Big Data world, Hadoop and MapReduce are highly dominant for large scale data processing. However, the MapReduce model shows its limits for various types of treatment, especially for highly iterative algorithms like in Machine Learning.\r\nSpark is an in-memory data processing framework that, unlike Hadoop provides interactive and real-time analysis on large datasets. Furthermore Spark has a more flexible programming model and gives better performances than Hadoop. \r\n\r\nThis talk aims at introducing Spark by showing off through a Machine Learning example how it differentiates itself from Hadoop, in regards to its API and performances. And as a closing note we will quickly explore the growing Spark ecosystem with projects like Spark streaming, Shark or SparkSQL."},"fromTime":"17:25","toTimeMillis":1415724900000,"toTime":"17:55","roomCapacity":425,"roomName":"Room 9","slotId":"tia_room9_tuesday_11_17h25_17h55","day":"tuesday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1415725500000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Architecture & Security","summaryAsHtml":"<p>It has become common practice to build programs by using libraries and make programs extendable by plugins. Applications deployed to application servers are also very popular nowadays. This means a serious issue for the security of the whole system. Luckily, Java has the solution - the Java Security Manager (JSM).\nQuick demo shows what to expect from evil applications and lazy programmers. The talk gives hints how to start with the JSM and how to write policy files. It also mentions which methods in your software should be protected by permission checks.\nThe talk introduces a new Security Manager called ProGrade, which is backward compatible with the JSM and also allows the administrator to use ‘deny’ entries in policies.</p>\n<p><em>Java Security is not a myth! The threat is out there. Be suspicious! Don’t trust your code and be paranoid when you use others’ code.</em></p>\n","id":"FRS-5384","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/7091d0dc7aa59c8b451ab3cbb2119f292b7fba67","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Josef Cacek"},"name":"Josef Cacek"}],"title":"Java Security Manager reloaded","lang":"en","summary":"It has become common practice to build programs by using libraries and make programs extendable by plugins. Applications deployed to application servers are also very popular nowadays. This means a serious issue for the security of the whole system. Luckily, Java has the solution - the Java Security Manager (JSM).\r\nQuick demo shows what to expect from evil applications and lazy programmers. The talk gives hints how to start with the JSM and how to write policy files. It also mentions which methods in your software should be protected by permission checks.\r\nThe talk introduces a new Security Manager called ProGrade, which is backward compatible with the JSM and also allows the administrator to use ‘deny’ entries in policies.\r\n\r\n*Java Security is not a myth! The threat is out there. Be suspicious! Don’t trust your code and be paranoid when you use others’ code.*\r\n"},"fromTime":"18:05","toTimeMillis":1415727300000,"toTime":"18:35","roomCapacity":364,"roomName":"Room 4","slotId":"tia_room4_tuesday_11_18h5_18h35","day":"tuesday"},{"roomId":"room5","notAllocated":false,"fromTimeMillis":1415725500000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Methodology & DevOps","summaryAsHtml":"<p>Gone are the days of noisy “linters&quot; and glorified spell checkers. Today’s static source code analysis is accurate and trustworthy, and can find complex inter-procedural coding defects that our human eyes would never see. Come see how open source developers have used Coverity’s Software Testing Platform to find and fix critical, crash causing bugs and security defects and learn how you can do the same. We’ll get our hands dirty with real live source code and bugs in popular open source packages.</p>\n","id":"PJZ-0329","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/42bb5675f2ec89145d513d34a5ebf5896221ef5f","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"James Croall"},"name":"James Croall"}],"title":"Static Source Code Analysis, The Next Generation","lang":"en","summary":"Gone are the days of noisy “linters\" and glorified spell checkers. Today’s static source code analysis is accurate and trustworthy, and can find complex inter-procedural coding defects that our human eyes would never see. Come see how open source developers have used Coverity’s Software Testing Platform to find and fix critical, crash causing bugs and security defects and learn how you can do the same. We’ll get our hands dirty with real live source code and bugs in popular open source packages. "},"fromTime":"18:05","toTimeMillis":1415727300000,"toTime":"18:35","roomCapacity":684,"roomName":"Room 5","slotId":"tia_room5_tuesday_11_18h5_18h35","day":"tuesday"},{"roomId":"room8","notAllocated":false,"fromTimeMillis":1415725500000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Java SE","summaryAsHtml":"<p><strong>The evolution of the Java Management Extensions (JMX) has stalled. Its fossilisation started some years ago but although JMX&#x27;s future is more than unclear, it is still present in every JVM out there. However, JMX is not without severe issues in a polyglot world with regard to remote access. Jolokia is an open source project which provides an easy HTTP access to JMX not only for Java clients.</strong></p>\n<p>Originally intended as backbone for lightweight Nagios monitoring, Jolokia is nowadays used as a general purpose management API adopted by platforms such as ActiveMQ or Spring XD and used by HTML5 consoles like hawt.io.</p>\n<p>This talk gives a detailed overview of Jolokia and its architecture. Jolokia uses an agent based approach where multiple variants with support for many platforms are available. In addition to standard JMX operations, Jolokia provides unique features like bulk requests or policy based security.</p>\n<p>The live coding part in this presentation demonstrates how easily a custom browser based JMX-JavaScript client can be developed.</p>\n<p>A live sneak preview of the forthcoming Jolokia 2.0 release finally completes this session.</p>\n","id":"LVC-7834","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/c6c08ad06fc697fc17e626edc3018af523545ddb","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Roland Huß"},"name":"Roland Huß"}],"title":"Spicing up JMX with Jolokia","lang":"en","summary":"**The evolution of the Java Management Extensions (JMX) has stalled. Its fossilisation started some years ago but although JMX's future is more than unclear, it is still present in every JVM out there. However, JMX is not without severe issues in a polyglot world with regard to remote access. Jolokia is an open source project which provides an easy HTTP access to JMX not only for Java clients.**\r\n\r\nOriginally intended as backbone for lightweight Nagios monitoring, Jolokia is nowadays used as a general purpose management API adopted by platforms such as ActiveMQ or Spring XD and used by HTML5 consoles like hawt.io.\r\n\r\nThis talk gives a detailed overview of Jolokia and its architecture. Jolokia uses an agent based approach where multiple variants with support for many platforms are available. In addition to standard JMX operations, Jolokia provides unique features like bulk requests or policy based security. \r\n\r\nThe live coding part in this presentation demonstrates how easily a custom browser based JMX-JavaScript client can be developed.\r\n\r\nA live sneak preview of the forthcoming Jolokia 2.0 release finally completes this session.\r\n"},"fromTime":"18:05","toTimeMillis":1415727300000,"toTime":"18:35","roomCapacity":745,"roomName":"Room 8","slotId":"tia_room8_tuesday_11_18h5_18h35","day":"tuesday"},{"roomId":"room9","notAllocated":false,"fromTimeMillis":1415725500000,"break":null,"roomSetup":"theatre","talk":{"talkType":"Tools-in-Action","track":"Cloud & BigData","summaryAsHtml":"<p>Today’s amounts of collected data are showing a nearly exponential growth. More than 75% of all the data have been collected in the past 5 years. To store this data and process it in an appropriate time you need to partition the data and parallelize the processing of reports and analytics.\nThis talk will demonstrate how to parallelize data processing using Hazelcast and it’s underlying distributed data structures. With a quick introduction into the different terms and some short live coding examples we will make the journey into the distributed computing.</p>\n","id":"GSD-2169","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/36dd0466f493e06ee97fe4d9497fc8fe3d030ae6","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Christoph Engelbert"},"name":"Christoph Engelbert"}],"title":"Distributed Computing with Hazelcast","lang":"en","summary":"Today’s amounts of collected data are showing a nearly exponential growth. More than 75% of all the data have been collected in the past 5 years. To store this data and process it in an appropriate time you need to partition the data and parallelize the processing of reports and analytics.\r\nThis talk will demonstrate how to parallelize data processing using Hazelcast and it’s underlying distributed data structures. With a quick introduction into the different terms and some short live coding examples we will make the journey into the distributed computing.\r\n"},"fromTime":"18:05","toTimeMillis":1415727300000,"toTime":"18:35","roomCapacity":425,"roomName":"Room 9","slotId":"tia_room9_tuesday_11_18h5_18h35","day":"tuesday"},{"roomId":"a_hall","notAllocated":false,"fromTimeMillis":1415727300000,"break":{"id":"exhib","nameEN":"Exhibition","nameFR":"Exhibition","room":{"id":"a_hall","name":"Exhibition floor","capacity":1500,"recorded":false,"setup":"special"}},"roomSetup":"special","talk":null,"fromTime":"18:35","toTimeMillis":1415732400000,"toTime":"20:00","roomCapacity":1500,"roomName":"Exhibition floor","slotId":"exhib_tuesday_11_18h35_19h0","day":"tuesday"},{"roomId":"bof1","notAllocated":false,"fromTimeMillis":1415728800000,"break":null,"roomSetup":"classroom","talk":{"talkType":"BOF (Bird of a Feather)","track":"JVM Languages","summaryAsHtml":"<p>Clojure is a new functional language and a LISP. Programming with Clojure is a great pleasure. The language is pure and great for concurrent applications.</p>\n<p>In this talk, you will get bootstrapped in Clojure development. You will learn a little bit of Clojure and about all the tools needed to write, build and deploy Clojure applications.</p>\n<p>From the basics, we will explore unit testing and REPL based development. Then we build a small web application offering a REST interface to store stuff in a database. Finally, we deploy the application either in the cloud or on Jetty.</p>\n<p>To complete, I will give you an overview of the Clojure landscape and how to continue learning.</p>\n","id":"XOX-8612","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/0eea1260d930ad2d3c842e43c821e2bb7371f69f","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Sebastian Hennebrueder"},"name":"Sebastian Hennebrueder"}],"title":"Introduction to Clojure","lang":"en","summary":"Clojure is a new functional language and a LISP. Programming with Clojure is a great pleasure. The language is pure and great for concurrent applications.\r\n\r\nIn this talk, you will get bootstrapped in Clojure development. You will learn a little bit of Clojure and about all the tools needed to write, build and deploy Clojure applications.\r\n\r\nFrom the basics, we will explore unit testing and REPL based development. Then we build a small web application offering a REST interface to store stuff in a database. Finally, we deploy the application either in the cloud or on Jetty.\r\n\r\nTo complete, I will give you an overview of the Clojure landscape and how to continue learning."},"fromTime":"19:00","toTimeMillis":1415732400000,"toTime":"20:00","roomCapacity":70,"roomName":"BOF 1","slotId":"bof_bof1_tuesday_11_19h0_20h0","day":"tuesday"},{"roomId":"bof2","notAllocated":false,"fromTimeMillis":1415728800000,"break":null,"roomSetup":"classroom","talk":{"talkType":"BOF (Bird of a Feather)","track":"Server Side Java","summaryAsHtml":"<p>MVC is a well-known concept exposed by various frameworks today. This session takes you on a journey that starts by bringing basic MVC support into a JAX-RS app. It then continues by extending these basic use cases with more-advanced techniques available today. The end of the first part of the session covers which of these principles are strong enough to make it to the next version of JAX-RS. The requirements of today’s modern web apps do not end with serving a nicely formatted page. They are moving into the realm of high-throughput and low-latency systems. The second part of the session compares the sync and async processing capabilities of JAX-RS and MVC. The examples use Jersey, Java 8, and reactive programming.</p>\n","id":"WSV-1538","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/13a39c3da778cfc32f5dd88ad34ac53f5a344771","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Michal Gajdos"},"name":"Michal Gajdos"}],"title":"The Future of MVC in JAX-RS","lang":"en","summary":"MVC is a well-known concept exposed by various frameworks today. This session takes you on a journey that starts by bringing basic MVC support into a JAX-RS app. It then continues by extending these basic use cases with more-advanced techniques available today. The end of the first part of the session covers which of these principles are strong enough to make it to the next version of JAX-RS. The requirements of today’s modern web apps do not end with serving a nicely formatted page. They are moving into the realm of high-throughput and low-latency systems. The second part of the session compares the sync and async processing capabilities of JAX-RS and MVC. The examples use Jersey, Java 8, and reactive programming."},"fromTime":"19:00","toTimeMillis":1415732400000,"toTime":"20:00","roomCapacity":70,"roomName":"BOF 2","slotId":"bof_bof2_tuesday_11_19h0_20h0","day":"tuesday"},{"roomId":"bof1","notAllocated":false,"fromTimeMillis":1415732400000,"break":null,"roomSetup":"classroom","talk":{"talkType":"BOF (Bird of a Feather)","track":"Java SE","summaryAsHtml":"<p>The JDK 9 release is focussed on modularisation with limited other features. Topics such as value types and generics reification are targeted at JDK 10 or beyond. The question of this BOF is could the community work with Oracle to produce one extra new JDK library in the JDK 9 timescale? If so, what should it be? I will facilitate with some suggestions, but come prepared with your own ideas.</p>\n","id":"ZUV-8988","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/b5046304272c6e3a897f21bd0379b068475997ec","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Stephen Colebourne"},"name":"Stephen Colebourne"}],"title":"One extra library for JDK 9?","lang":"en","summary":"The JDK 9 release is focussed on modularisation with limited other features. Topics such as value types and generics reification are targeted at JDK 10 or beyond. The question of this BOF is could the community work with Oracle to produce one extra new JDK library in the JDK 9 timescale? If so, what should it be? I will facilitate with some suggestions, but come prepared with your own ideas."},"fromTime":"20:00","toTimeMillis":1415736000000,"toTime":"21:00","roomCapacity":70,"roomName":"BOF 1","slotId":"bof_bof1_tuesday_11_20h0_21h0","day":"tuesday"},{"roomId":"bof2","notAllocated":false,"fromTimeMillis":1415732400000,"break":null,"roomSetup":"classroom","talk":{"talkType":"BOF (Bird of a Feather)","track":"Server Side Java","summaryAsHtml":"<p>The stories on GlassFish and Heartbleed tell us that there is an issue with how the IT industry looks at Open Source software. Too often, it is assumed that all OS developers should work for free on the OS product. It is often ignored that they need to make a living as well. This often forces the OS developer to combine his OS efforts with a consultancy career. Not all OS developers like this, though.</p>\n<p>The Heartbleed bug in OpenSSL showed that most people don&#x27;t realize that some crucial parts of the Internet depend on the work of a very small group of unpaid volunteers.</p>\n<p>Some questions we can discuss during his BOF:\n* is it good/bad if a big company &quot;sponsors&quot; an Open Source product (e.g. Oracle/RedHat sponsoring GlassFish/WildFly)?\n* is a freemium model acceptable for the industry and for developers?\n* if companies are using OS products for free, who should pay the core developers?\n* too many companies consider &quot;free software&quot; as &quot;free beer&quot;. How can this attitude be changed?</p>\n","id":"AKY-3900","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/9cd06a0d84f3f9f59df8379e7f20556e95124ad8","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"David Blevins"},"name":"David Blevins"},{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/29db73c44aa90f13dbf8129804f1037b44d9f3fe","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Johan Vos"},"name":"Johan Vos"}],"title":"Open Source models","lang":"en","summary":"The stories on GlassFish and Heartbleed tell us that there is an issue with how the IT industry looks at Open Source software. Too often, it is assumed that all OS developers should work for free on the OS product. It is often ignored that they need to make a living as well. This often forces the OS developer to combine his OS efforts with a consultancy career. Not all OS developers like this, though.\r\n\r\nThe Heartbleed bug in OpenSSL showed that most people don't realize that some crucial parts of the Internet depend on the work of a very small group of unpaid volunteers.\r\n\r\nSome questions we can discuss during his BOF:\r\n* is it good/bad if a big company \"sponsors\" an Open Source product (e.g. Oracle/RedHat sponsoring GlassFish/WildFly)?\r\n* is a freemium model acceptable for the industry and for developers?\r\n* if companies are using OS products for free, who should pay the core developers?\r\n* too many companies consider \"free software\" as \"free beer\". How can this attitude be changed?"},"fromTime":"20:00","toTimeMillis":1415736000000,"toTime":"21:00","roomCapacity":70,"roomName":"BOF 2","slotId":"bof_bof2_tuesday_11_20h0_21h0","day":"tuesday"},{"roomId":"bof1","notAllocated":false,"fromTimeMillis":1415736000000,"break":null,"roomSetup":"classroom","talk":{"talkType":"BOF (Bird of a Feather)","track":"Startups","summaryAsHtml":"<p>It’s easy to start a company, understanding the hoops you need to jump through to fund it is another. So, lets get together to discuss assignments, dilution, valuations, convertible loans and all the other nasty stuff that keeps us from coding but also pays the bills.</p>\n","id":"LLG-2213","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/2ffe07662d15004faa36eb58ed6b22de7db2968e","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Kirk Pepperdine"},"name":"Kirk Pepperdine"}],"title":"You’ve got the product, now what?","lang":"en","summary":"It’s easy to start a company, understanding the hoops you need to jump through to fund it is another. So, lets get together to discuss assignments, dilution, valuations, convertible loans and all the other nasty stuff that keeps us from coding but also pays the bills."},"fromTime":"21:00","toTimeMillis":1415739600000,"toTime":"22:00","roomCapacity":70,"roomName":"BOF 1","slotId":"bof_bof1_tuesday_11_21h0_22h0","day":"tuesday"},{"roomId":"bof2","notAllocated":false,"fromTimeMillis":1415736000000,"break":null,"roomSetup":"classroom","talk":{"talkType":"BOF (Bird of a Feather)","track":"Java SE","summaryAsHtml":"<p>The Java Community Process (JCP) is key to the evolution of Java. We will discuss participation in the JCP program and how to get your JUG, your employer and yourself involved.  We will also discuss how you can participate to in the work of the JCP as through the Adopt-a-JSR program. You will also hear and discuss some upcoming changes to the Java Specification Request (JSR) process through the JCP.next effort, JSR 358, and JSR 364, and learn how you can get involved. Come with your questions/suggestions, and leave with the motivation and information you need in order to become an active participant in advancing the Java platform.</p>\n","id":"MPT-7215","speakers":[{"link":{"href":"http://cfp.devoxx.fr/api/conferences/DevoxxFR2015/speakers/00cc2b259b5a0c29f7b2e7ff7faf59acea8904c3","rel":"http://cfp.devoxx.fr/api/profile/speaker","title":"Heather VanCura"},"name":"Heather VanCura"}],"title":"JCP, Adopt-a-JSR, and You ","lang":"en","summary":"The Java Community Process (JCP) is key to the evolution of Java. We will discuss participation in the JCP program and how to get your JUG, your employer and yourself involved.  We will also discuss how you can participate to in the work of the JCP as through the Adopt-a-JSR program. You will also hear and discuss some upcoming changes to the Java Specification Request (JSR) process through the JCP.next effort, JSR 358, and JSR 364, and learn how you can get involved. Come with your questions/suggestions, and leave with the motivation and information you need in order to become an active participant in advancing the Java platform."},"fromTime":"21:00","toTimeMillis":1415739600000,"toTime":"22:00","roomCapacity":70,"roomName":"BOF 2","slotId":"bof_bof2_tuesday_11_21h0_22h0","day":"tuesday"}]}